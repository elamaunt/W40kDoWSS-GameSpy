<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ThunderHawk.Styles">

    <FontFamily x:Key="MainFont">Segoe UI</FontFamily>
    <FontFamily x:Key="Montserrat">pack://application:,,,/ThunderHawk;component/Fonts/Montserrat/#Montserrat</FontFamily>
    
    <SolidColorBrush x:Key="ComboBox.Static.Background" Color="Yellow"/>


    <Style TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Background" Value="Transparent" />
    </Style>


    <Style x:Key="BigWideButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="{StaticResource MainFont}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="ContentGrid" Background="{DynamicResource MainBlue}">
                        <ContentPresenter Margin="15 0 15 0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentGrid" Property="Background" Value="#18aff4" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentGrid" Property="Background" Value="#bb4682b4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TopBarButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter x:Name="Content" Opacity="0.7" HorizontalAlignment="Center"
                                      VerticalAlignment="Center" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Content" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="QuestionButtonStyle" TargetType="{x:Type ToggleButton}"
           BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{StaticResource Montserrat}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Typography.Capitals" Value="AllSmallCaps" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Margin="0 0 0 0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#44ffffff" />
                            <!--Setter TargetName="ButtonBorder" Property="BorderThickness" Value="0 0 0 3" /-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="#ffff00" />
                            <!--Setter TargetName="ButtonBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="0 0 0 2" /-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="NavigationButtonStyle" TargetType="{x:Type ToggleButton}"
           BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="FontSize" Value="22" />
        <Setter Property="FontFamily" Value="{StaticResource Montserrat}" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Typography.Capitals" Value="AllSmallCaps" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Margin="0 0 0 0">
                        <Border BorderThickness="0" BorderBrush="{DynamicResource MainBlue}" x:Name="ButtonBorder" />
                        <ContentPresenter Margin="18 0 10 0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#44ffffff" />
                            <!--Setter TargetName="ButtonBorder" Property="BorderThickness" Value="0 0 0 3" /-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="#ffff00" />
                            <!--Setter TargetName="ButtonBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="0 0 0 2" /-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CardViewBigButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="ContentGrid" Background="#00000000">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--EventTrigger RoutedEvent="Button.MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                          Storyboard.TargetProperty="(Grid.Opacity)"
                                          From="1.0" To="0.5" Duration="0:0:0.5" AutoReverse="True"
                                          RepeatBehavior="Forever" />           
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </>

                        <EventTrigger RoutedEvent="Button.MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                          Storyboard.TargetProperty="(Grid.Opacity)"
                                          To="1" Duration="0:0:0.1" />          
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger-->

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentGrid" Property="Background" Value="#0effffff" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentGrid" Property="Background" Value="#00000000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CardViewSmallButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="ContentGrid" Background="#00000000">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentGrid" Property="Background" Value="#0effffff" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentGrid" Property="Background" Value="#00000000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LaunchButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontFamily" Value="{StaticResource MainFont}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="ContentGrid" Background="{DynamicResource MainBlue}">
                        <ContentPresenter x:Name="Content" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentGrid" Property="Background" Value="#18aff4" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentGrid" Property="Background"
                                    Value="{DynamicResource DarkMainBlue}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LaunchButtonStyle2" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontFamily" Value="{StaticResource MainFont}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="ContentGrid" Background="{DynamicResource MainRed}">
                        <ContentPresenter x:Name="Content" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentGrid" Property="Background"
                                    Value="{DynamicResource MainRedHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentGrid" Property="Background"
                                    Value="{DynamicResource DarkMainRed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="ModSelection" TargetType="{x:Type ComboBox}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{StaticResource MainFont}" />
        <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
    </Style>
    <Style x:Key="ModSelectionItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid>
                        <Border x:Name="Border" Background="Transparent">
                            <TextBlock FontSize="12" FontFamily="Segoe UI Light">
                                <ContentPresenter />
                            </TextBlock>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ComboBoxItem.IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="LightGray" />
                        </Trigger>
                        <Trigger Property="ComboBoxItem.IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="LightGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
</ResourceDictionary>